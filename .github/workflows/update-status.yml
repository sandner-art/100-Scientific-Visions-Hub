name: Update Project Status & Deploy Dashboard

on:
  schedule:
    # Run daily (e.g., at 6 AM UTC)
    - cron: '0 6 * * *'
  workflow_dispatch: # Allow manual triggering
  push:
    branches: 
      - main # Or your primary branch (e.g., master)
    paths:
      - 'scripts/update-status.js'
      - '.github/workflows/**'       # Trigger on any workflow changes
      - 'index.html'                 # Trigger if dashboard HTML changes
      - 'package.json'
      - 'package-lock.json'
      # Optional: if changes to these templates should re-run the full discovery
      # - '100SV.md' 
      # - 'progress.md'

permissions:
  contents: write # Needed to commit README.md, data/, reports/
  pages: write    # Needed to deploy to GitHub Pages
  id-token: write # Needed for GitHub Pages deployment authentication

jobs:
  update-status:
    name: Update Project Data & Reports
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # The default GITHUB_TOKEN is used for checkout.
        # If you need the checkout step itself to use a PAT (e.g., for submodules from private repos
        # or to trigger other workflows that require a PAT for the push), you'd set it here.
        # For simply checking out this public hub repo, default is fine.
        # token: ${{ secrets.YOUR_CHECKOUT_PAT_IF_NEEDED }}
        fetch-depth: 0 # Fetches all history; useful if script ever does git log analysis

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20' # Use a current LTS version of Node.js
        cache: 'npm'     # Enable caching for npm dependencies

    - name: Install dependencies
      run: npm ci          # Clean install using package-lock.json

    - name: Run status update script
      env:
        # This is where your PAT for accessing other repos (especially private) is passed.
        # The script (scripts/update-status.js) expects this as process.env.GITHUB_TOKEN
        GITHUB_TOKEN: ${{ secrets.GH_PAT_PRIVATE_REPOS }}
        GITHUB_OWNER: ${{ github.repository_owner }}
        GITHUB_REPOSITORY: ${{ github.repository }} # e.g., "your-username/hub-repo-name"
      run: node scripts/update-status.js

    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot [100SV Hub]"
        # Add all generated/modified files
        git add README.md reports/ data/ 
        if git diff --staged --quiet; then
          echo "No changes to commit."
        else
          git commit -m "ðŸ¤– Auto-update 100SV project dashboard - $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          # Simple retry loop for push
          for i in 1 2 3; do
            git push && echo "Push successful." && break
            if [ $i -lt 3 ]; then
              echo "Push failed, retrying in 15s..."
              sleep 15
            else
              echo "Push failed after 3 attempts."
              exit 1 # Fail the step if push ultimately fails
            fi
          done
        fi

  deploy-dashboard:
    name: Deploy Dashboard to GitHub Pages
    needs: update-status # Ensures this job runs after data is updated and committed
    # Only run on pushes to the main branch to avoid deploying from other branches or on every schedule.
    # If you want scheduled runs to also deploy, you might remove `&& github.event_name == 'push'`
    if: github.ref == 'refs/heads/main' # && github.event_name == 'push' 
    runs-on: ubuntu-latest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Checkout repository (for Pages deployment)
      uses: actions/checkout@v4
      # This checkout fetches the latest commit, which should include changes from the 'update-status' job.

    - name: Setup Pages
      uses: actions/configure-pages@v5 # Use latest version

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3 # Use latest version
      with:
        # Path to the directory to upload for Pages. 
        # '.' means the root of your repository, which contains index.html and data/
        path: '.' 

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 # Use latest version